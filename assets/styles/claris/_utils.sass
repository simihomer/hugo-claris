@for $i from 1 through 2
  $size: $i * 1.5rem
  $x-size: $size * 0.5
  .pt-#{$i}
    padding-top: $size

  .pb-#{$i}
    padding-bottom: $size

  .mt-#{$i}
    margin-top: $size

  .mb-#{$i}
    margin-bottom: $size

.flex
  display: flex
  flex-direction: column
  align-items: center

.shadow
  box-shadow: 0 0 60px rgba(0, 0, 0, 0.17)

@supports (display: grid)
  @media screen and (min-width: $screenViewBreakpointWidthTwoColumn)
    // %grid
    //   display: grid
    //   grid-template-columns: 1fr

    // [class*='grid-']
    //   grid-gap: 2rem

    // .grid-2, .grid-3, .grid-4, .grid-auto, .grid-inverse
    //   @extend %grid
    // .grid-inverse
    //   grid-template-columns: 70% 1fr
    //   grid-column-gap: 4rem
    // .grid-2
    //   grid-template-columns: 1fr 1fr
    // .grid-3
    //   grid-template-columns: repeat(auto-fit, minmax(19rem, 1fr))
    // .grid-4
    //   grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr))

  @media screen and (min-width: $screenViewBreakpointWidthTwoColumn)
    .grid-main-single
      display: grid
      --column-gap: #{$screenViewColumnGap}
      // https://css-tricks.com/preventing-a-grid-blowout/
      // Avoid code column (pre element) from busting the grid by setting
      // a min width of 0 via minmax
      // grid-template-columns: minmax(#{$screenViewWidthAsideMin}, 1fr) minmax(#{$screenViewColumnWidthMin}, 10fr)
      grid-template-columns: minmax(#{$screenViewWidthAsideMin}, 1fr) minmax(1px, 10fr)
      // grid-column-gap: var(--column-gap)
      grid-template-rows: minmax(min-content, min-content) minmax(min-content, min-content)

      .article_aside
        grid-column: 1
      .content
        grid-column: 2
        margin-left: var(--column-gap)
        margin-right: var(--column-gap)
      .sidebar
        grid-row: 2
        grid-column: 2
        margin-left: var(--column-gap)
        margin-right: var(--column-gap)
        padding-left: var(--inner_padding-x)
        padding-right: var(--inner_padding-x)

  @media screen and (min-width: $screenViewBreakpointWidthWide)
    .grid-main-single
      --column-gap: #{$screenViewColumnGapWide}
      // grid-template-columns: minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax}) minmax(#{$screenViewColumnWidthWideMin}, #{$screenViewColumnWidthWideMax}) minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax})
      // grid-template-columns: minmax(#{$screenViewWidthWideAsideMin}, 1fr) minmax(#{$screenViewColumnWidthWideMin}, 4fr) minmax(#{$screenViewWidthWideAsideMin}, 1fr)
      grid-template-columns: minmax(0px, 1fr) minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax}) minmax(#{$screenViewColumnWidthWideMin}, #{$screenViewColumnWidthWideMax}) minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax}) minmax(0px, 1fr)
      .article_aside
        grid-column: 2
      .content
        grid-column: 3
      .sidebar
        grid-row: 1
        grid-column: 4
        margin: 0
        padding: 0

  // @media screen and (min-width: $screenViewBreakpointWidthUltrawide)
  //   .grid-main-single
  //     --column-gap: 2rem
  //     grid-template-columns: minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax}) #{$screenViewWidthUltrawide} minmax(#{$screenViewWidthWideAsideMin}, #{$screenViewWidthWideAsideMax})
  //     .article_aside
  //       grid-column: 1
  //     .content
  //       grid-column: 2
  //     .sidebar
  //       grid-row: 1
  //       grid-column: 3

$sites: ("facebook": #325c94, "twitter": #00abdc,"linkedin": #007bb6)

@each $item, $color in $sites
  .#{$item}
    svg
      fill: $color

// Error pages
.never
  // height: 75vh
  height: 100vh
  display: flex
  justify-content: center
  align-items: center
  flex-direction: column
  // padding: 1.5rem
  text-align: center

.inline
  display: inline
  margin: 0

.hidden
  display: none
